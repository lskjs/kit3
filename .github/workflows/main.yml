name: CI-action
on:
  push:
    branches:
      - "action"

env:
  ECS_TD: .github/workflows/td.json
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: chatterfy


jobs:
  build_api:
    defaults:
      run:
        shell: bash
        working-directory: apps/api
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '19.5.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8.1.0
      - uses: ./.github/actions/utils-before
      - run: pnpm install
      - run: pnpm build
      - run: pnpm -F "." deploy .release
      - name: Zip artifact for deployment
        run: zip -q --symlinks release.zip ./.release ./lib -r
      - uses: actions/upload-artifact@master
        with:
          name: api
          path: apps/api/release.zip

  build_web:
    defaults:
      run:
        shell: bash
        working-directory: apps/web
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '19.5.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8.1.0
      - uses: ./.github/actions/utils-before
      - run: pnpm install
      - run: pnpm -F "." deploy .release
      - run: cd .release && pnpm build
      - name: Zip artifact for deployment
        run: zip -q --symlinks release.zip ./.release ./lib -r
      - uses: actions/upload-artifact@master
        with:
          name: web
          path: apps/web/release.zip
    
  docker_api:
    needs: build_api
    defaults:
      run:
        shell: bash
        working-directory: apps/api
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - uses: actions/download-artifact@master
        with:
          name: api
          path: apps/api
      - name: unzip artifact for deployment
        run: unzip -q release.zip && rm release.zip
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # -
      #   name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ vars.DOCKER_REGISTRY }}
      #     username: ${{ secrets.DOCKER_REGISTRY_USER }}
      #     password: ${{ secrets.DOCKER_REGISTRY_PASS }}
      # -
      #   name: Build and push api
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: apps/api
      #     push: true
      #     tags: "${{ vars.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_PATH }}/api:${{ env.SHORT_SHA }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 062467975640.dkr.ecr.eu-west-1.amazonaws.com

      - name: Build and tag Docker image
        run: |
          docker build -t 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:api-${{ github.sha }} .
          docker tag 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:${{ github.sha }} 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:api-latest

      - name: Push Docker image to ECR
        run: |
          docker push 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:api-${{ github.sha }}
          docker push 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:api-latest



  docker_web:
    needs: build_web
    defaults:
      run:
        shell: bash
        working-directory: apps/web
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - uses: actions/download-artifact@master
        with:
          name: web
          path: apps/web
      - name: unzip artifact for deployment
        run: unzip -q release.zip && rm release.zip
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # -
      #   name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ vars.DOCKER_REGISTRY }}
      #     username: ${{ secrets.DOCKER_REGISTRY_USER }}
      #     password: ${{ secrets.DOCKER_REGISTRY_PASS }}
      # -
      #   name: Build and push web
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: apps/web
      #     push: true
      #     tags: "${{ vars.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_PATH }}/web:${{ env.SHORT_SHA }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 062467975640.dkr.ecr.eu-west-1.amazonaws.com

      - name: Build and tag Docker image
        run: |
          docker build -t 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:web-${{ github.sha }} .
          docker tag 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:${{ github.sha }} 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:web-latest

      - name: Push Docker image to ECR
        run: |
          docker push 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:web-${{ github.sha }}
          docker push 062467975640.dkr.ecr.eu-west-1.amazonaws.com/chatterfy:web-latest

  # deploy:
  #   needs: [docker_api, docker_web]
  #   runs-on: ubuntu-22.04
  #   container: lskjs/kubectl
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Add SHORT_SHA env property with commit short sha
  #       run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
  #     - name: Set Kubernetes Context
  #       uses: azure/k8s-set-context@v1
  #       with:
  #         method: kubeconfig
  #         kubeconfig: ${{ secrets.KUBE_CONFIG }}
  #     - name: env file
  #       uses: mobiledevops/secret-to-file-action@v1
  #       with:
  #         base64-encoded-secret: ${{ secrets.PROD_ENV_FILE }}
  #         filename: "prod_env_file"
  #         is-executable: false
  #         working-directory: "./envs"
  #     - name: env js
  #       uses: mobiledevops/secret-to-file-action@v1
  #       with:
  #         base64-encoded-secret: ${{ secrets.PROD_ENV_JS }}
  #         filename: "prod_env_js"
  #         is-executable: false
  #         working-directory: "./envs"
  #     - run: kubectl create secret generic prod-kit --from-file=./envs/prod_env_file --from-file=./envs/prod_env_js --save-config --dry-run=client -o yaml | kubectl apply -f -
  #     - run: envsubst < deploy/k8s-deploy.yaml > deploy.yaml.${{ env.SHORT_SHA }}
  #       env: 
  #         APP_NAME: kit3
  #         STAGE: prod
  #         DOCKER_IMAGE_API: "${{ vars.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_PATH }}/api:${{ env.SHORT_SHA }}"
  #         DOCKER_IMAGE_WEB: "${{ vars.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_PATH }}/web:${{ env.SHORT_SHA }}"
  #     - run: kubectl apply -f ./deploy.yaml.${{ env.SHORT_SHA }}
